[
  {
    "timestamp": "2016-09-16 00:00:00.651725", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has no memory leaks.", 
        "name": "no_leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has memory leaks.", 
        "name": "leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has bad frees.", 
        "name": "bad_free", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues.", 
        "name": "full", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "name": "memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==29208== Memcheck, a memory error detector\n==29208== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==29208== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==29208== Command: ././full_test\n==29208== \nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==29208== \n==29208== HEAP SUMMARY:\n==29208==     in use at exit: 0 bytes in 0 blocks\n==29208==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==29208== \n==29208== All heap blocks were freed -- no leaks are possible\n==29208== \n==29208== For counts of detected and suppressed errors, rerun with: -v\n==29208== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }
    ], 
    "revision": "22355", 
    "checksum": "89a702b5a7c600c960cc2428f3f278c6bf5ae5b4  mini_valgrind.c"
  }, 
  {
    "timestamp": "2016-09-17 00:00:00.660261", 
    "testcases": [
      {
        "description": "Test with program that has no memory leaks.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n", 
        "name": "no_leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has memory leaks.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\n", 
        "name": "leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has bad frees.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "name": "bad_free", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "name": "full", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==13069== Memcheck, a memory error detector\n==13069== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==13069== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==13069== Command: ././full_test\n==13069== \nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==13069== \n==13069== HEAP SUMMARY:\n==13069==     in use at exit: 0 bytes in 0 blocks\n==13069==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==13069== \n==13069== All heap blocks were freed -- no leaks are possible\n==13069== \n==13069== For counts of detected and suppressed errors, rerun with: -v\n==13069== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "memory", 
        "ptsPossible": 1.0
      }
    ], 
    "checksum": "89a702b5a7c600c960cc2428f3f278c6bf5ae5b4  mini_valgrind.c", 
    "revision": "22842"
  }, 
  {
    "timestamp": "2016-09-18 00:00:00.646216", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "no_leak", 
        "description": "Test with program that has no memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "leak", 
        "description": "Test with program that has memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "bad_free", 
        "description": "Test with program that has bad frees."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "full", 
        "description": "Test with program that has a variety of issues."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==29098== Memcheck, a memory error detector\n==29098== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==29098== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==29098== Command: ././full_test\n==29098== \nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==29098== \n==29098== HEAP SUMMARY:\n==29098==     in use at exit: 0 bytes in 0 blocks\n==29098==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==29098== \n==29098== All heap blocks were freed -- no leaks are possible\n==29098== \n==29098== For counts of detected and suppressed errors, rerun with: -v\n==29098== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "memory", 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well."
      }
    ], 
    "revision": "23710", 
    "checksum": "89a702b5a7c600c960cc2428f3f278c6bf5ae5b4  mini_valgrind.c"
  }, 
  {
    "timestamp": "2016-09-19 00:00:00.656635", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has no memory leaks.", 
        "name": "no_leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has memory leaks.", 
        "name": "leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has bad frees.", 
        "name": "bad_free", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues.", 
        "name": "full", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "name": "memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==12878== Memcheck, a memory error detector\n==12878== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==12878== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==12878== Command: ././full_test\n==12878== \nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==12878== \n==12878== HEAP SUMMARY:\n==12878==     in use at exit: 0 bytes in 0 blocks\n==12878==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==12878== \n==12878== All heap blocks were freed -- no leaks are possible\n==12878== \n==12878== For counts of detected and suppressed errors, rerun with: -v\n==12878== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }
    ], 
    "checksum": "89a702b5a7c600c960cc2428f3f278c6bf5ae5b4  mini_valgrind.c", 
    "revision": "25067"
  }, 
  {
    "timestamp": "2016-09-20 00:00:00.648912", 
    "testcases": [
      {
        "description": "Test with program that has no memory leaks.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n", 
        "name": "no_leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has memory leaks.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\n", 
        "name": "leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has bad frees.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "name": "bad_free", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "name": "full", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==29013== Memcheck, a memory error detector\n==29013== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==29013== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==29013== Command: ././full_test\n==29013== \nfile_name was stored wrong.\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==29013== \n==29013== HEAP SUMMARY:\n==29013==     in use at exit: 0 bytes in 0 blocks\n==29013==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==29013== \n==29013== All heap blocks were freed -- no leaks are possible\n==29013== \n==29013== For counts of detected and suppressed errors, rerun with: -v\n==29013== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "26795", 
    "checksum": "89a702b5a7c600c960cc2428f3f278c6bf5ae5b4  mini_valgrind.c"
  }, 
  {
    "timestamp": "2016-09-21 00:00:00.673242", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "no_leak", 
        "description": "Test with program that has no memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "leak", 
        "description": "Test with program that has memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "bad_free", 
        "description": "Test with program that has bad frees."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nfile_name was stored wrong.\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "full", 
        "description": "Test with program that has a variety of issues."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==24555== Memcheck, a memory error detector\n==24555== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==24555== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==24555== Command: ././full_test\n==24555== \nfile_name was stored wrong.\n==24555== \n==24555== HEAP SUMMARY:\n==24555==     in use at exit: 0 bytes in 0 blocks\n==24555==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==24555== \n==24555== All heap blocks were freed -- no leaks are possible\n==24555== \n==24555== For counts of detected and suppressed errors, rerun with: -v\n==24555== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "memory", 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well."
      }
    ], 
    "checksum": "338dc38ef31d531720a8173ed59f2e3e584a6673  mini_valgrind.c", 
    "revision": "27776"
  }
]