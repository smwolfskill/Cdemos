[
  {
    "timestamp": "2016-09-30 10:38:00.621014", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_block_on_min", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_maxSize", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_generic_test", 
        "description": "Test queue, push and pull large amounts of data"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_stress", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==13111== Memcheck, a memory error detector\n==13111== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==13111== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==13111== Command: ./queue_tests 5\n==13111== \n==13111== \n==13111== HEAP SUMMARY:\n==13111==     in use at exit: 0 bytes in 0 blocks\n==13111==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==13111== \n==13111== All heap blocks were freed -- no leaks are possible\n==13111== \n==13111== For counts of detected and suppressed errors, rerun with: -v\n==13111== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_mem", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_unboundedness", 
        "description": "Test that queue is not bounded"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore", 
        "description": "Test semamore in rendezvous.c"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_init", 
        "description": "Test semamore init function"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_wait_simple", 
        "description": "Test semamore wait"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_wait_block", 
        "description": "Test that semamore wait blocks"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_post_simple", 
        "description": "Test semamore post"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_post_block", 
        "description": "Test that semamore post blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_single", 
        "description": "Test on use of barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_multiple", 
        "description": "Test for multiple uses of the barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==13243== Memcheck, a memory error detector\n==13243== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==13243== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==13243== Command: ./barrier_tests 2 4\n==13243== \n==13243== \n==13243== HEAP SUMMARY:\n==13243==     in use at exit: 0 bytes in 0 blocks\n==13243==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==13243== \n==13243== All heap blocks were freed -- no leaks are possible\n==13243== \n==13243== For counts of detected and suppressed errors, rerun with: -v\n==13243== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_mem", 
        "description": "Test for multiple uses of the barrier under valgrind."
      }
    ], 
    "checksum": "070d7699bee2ffc9148ff626627da1ed769dfdfe  queue.c\n8a483bce32fba801bb574f7d3063adf858985cb9  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c", 
    "revision": "37262"
  }, 
  {
    "timestamp": "2016-09-30 22:00:00.731724", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "name": "test_queue_block_on_min", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "name": "test_queue_maxSize", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, push and pull large amounts of data", 
        "name": "test_queue_generic_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Queue stress test", 
        "name": "test_queue_stress", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Queue stress test", 
        "name": "test_queue_mem", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==32021== Memcheck, a memory error detector\n==32021== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==32021== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==32021== Command: ./queue_tests 5\n==32021== \n==32021== \n==32021== HEAP SUMMARY:\n==32021==     in use at exit: 0 bytes in 0 blocks\n==32021==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==32021== \n==32021== All heap blocks were freed -- no leaks are possible\n==32021== \n==32021== For counts of detected and suppressed errors, rerun with: -v\n==32021== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that queue is not bounded", 
        "name": "test_queue_unboundedness", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test semamore in rendezvous.c", 
        "name": "test_semamore", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test semamore init function", 
        "name": "test_semamore_init", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test semamore wait", 
        "name": "test_semamore_wait_simple", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that semamore wait blocks", 
        "name": "test_semamore_wait_block", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test semamore post", 
        "name": "test_semamore_post_simple", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that semamore post blocks", 
        "name": "test_semamore_post_block", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test on use of barrier.", 
        "name": "test_barrier_single", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test for multiple uses of the barrier.", 
        "name": "test_barrier_multiple", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "name": "test_barrier_mem", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==32153== Memcheck, a memory error detector\n==32153== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==32153== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==32153== Command: ./barrier_tests 2 4\n==32153== \n==32153== \n==32153== HEAP SUMMARY:\n==32153==     in use at exit: 0 bytes in 0 blocks\n==32153==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==32153== \n==32153== All heap blocks were freed -- no leaks are possible\n==32153== \n==32153== For counts of detected and suppressed errors, rerun with: -v\n==32153== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials."
      }
    ], 
    "revision": "37589", 
    "checksum": "070d7699bee2ffc9148ff626627da1ed769dfdfe  queue.c\n8a483bce32fba801bb574f7d3063adf858985cb9  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c"
  }, 
  {
    "timestamp": "2016-10-01 22:00:00.698447", 
    "testcases": [
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_block_on_min", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_maxSize", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, push and pull large amounts of data", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_generic_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_stress", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==18990== Memcheck, a memory error detector\n==18990== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==18990== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==18990== Command: ./queue_tests 5\n==18990== \n==18990== \n==18990== HEAP SUMMARY:\n==18990==     in use at exit: 0 bytes in 0 blocks\n==18990==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==18990== \n==18990== All heap blocks were freed -- no leaks are possible\n==18990== \n==18990== For counts of detected and suppressed errors, rerun with: -v\n==18990== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "test_queue_mem", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that queue is not bounded", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_unboundedness", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore in rendezvous.c", 
        "ptsEarned": 0.0, 
        "log": "Test Failed", 
        "name": "test_semamore", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore init function", 
        "ptsEarned": 0.0, 
        "log": "Test Failed", 
        "name": "test_semamore_init", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore wait", 
        "ptsEarned": 0.0, 
        "log": "Test Failed", 
        "name": "test_semamore_wait_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore wait blocks", 
        "ptsEarned": 0.0, 
        "log": "Test Failed", 
        "name": "test_semamore_wait_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore post", 
        "ptsEarned": 0.0, 
        "log": "Test Failed", 
        "name": "test_semamore_post_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore post blocks", 
        "ptsEarned": 0.0, 
        "log": "Test Failed", 
        "name": "test_semamore_post_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test on use of barrier.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "name": "test_barrier_single", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "name": "test_barrier_multiple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==19122== Memcheck, a memory error detector\n==19122== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==19122== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==19122== Command: ./barrier_tests 2 4\n==19122== \n==19122== \n==19122== HEAP SUMMARY:\n==19122==     in use at exit: 0 bytes in 0 blocks\n==19122==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==19122== \n==19122== All heap blocks were freed -- no leaks are possible\n==19122== \n==19122== For counts of detected and suppressed errors, rerun with: -v\n==19122== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials.", 
        "name": "test_barrier_mem", 
        "ptsPossible": 1.0
      }
    ], 
    "checksum": "070d7699bee2ffc9148ff626627da1ed769dfdfe  queue.c\n8a483bce32fba801bb574f7d3063adf858985cb9  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c", 
    "revision": "38391"
  }, 
  {
    "timestamp": "2016-10-02 22:00:00.748311", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_block_on_min", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_maxSize", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_generic_test", 
        "description": "Test queue, push and pull large amounts of data"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_stress", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==5855== Memcheck, a memory error detector\n==5855== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==5855== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==5855== Command: ./queue_tests 5\n==5855== \n==5855== \n==5855== HEAP SUMMARY:\n==5855==     in use at exit: 0 bytes in 0 blocks\n==5855==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==5855== \n==5855== All heap blocks were freed -- no leaks are possible\n==5855== \n==5855== For counts of detected and suppressed errors, rerun with: -v\n==5855== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_mem", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_unboundedness", 
        "description": "Test that queue is not bounded"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore", 
        "description": "Test semamore in rendezvous.c"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_init", 
        "description": "Test semamore init function"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_wait_simple", 
        "description": "Test semamore wait"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_wait_block", 
        "description": "Test that semamore wait blocks"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_post_simple", 
        "description": "Test semamore post"
      }, 
      {
        "log": "Test Failed", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_post_block", 
        "description": "Test that semamore post blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_single", 
        "description": "Test on use of barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_multiple", 
        "description": "Test for multiple uses of the barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==5988== Memcheck, a memory error detector\n==5988== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==5988== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==5988== Command: ./barrier_tests 2 4\n==5988== \n==5988== \n==5988== HEAP SUMMARY:\n==5988==     in use at exit: 0 bytes in 0 blocks\n==5988==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==5988== \n==5988== All heap blocks were freed -- no leaks are possible\n==5988== \n==5988== For counts of detected and suppressed errors, rerun with: -v\n==5988== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_mem", 
        "description": "Test for multiple uses of the barrier under valgrind."
      }
    ], 
    "revision": "39221", 
    "checksum": "070d7699bee2ffc9148ff626627da1ed769dfdfe  queue.c\n8a483bce32fba801bb574f7d3063adf858985cb9  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c"
  }, 
  {
    "timestamp": "2016-10-03 22:00:00.712509", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "name": "test_queue_block_on_min", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "name": "test_queue_maxSize", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, push and pull large amounts of data", 
        "name": "test_queue_generic_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Queue stress test", 
        "name": "test_queue_stress", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Queue stress test", 
        "name": "test_queue_mem", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==24800== Memcheck, a memory error detector\n==24800== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==24800== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==24800== Command: ./queue_tests 5\n==24800== \n==24800== \n==24800== HEAP SUMMARY:\n==24800==     in use at exit: 0 bytes in 0 blocks\n==24800==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==24800== \n==24800== All heap blocks were freed -- no leaks are possible\n==24800== \n==24800== For counts of detected and suppressed errors, rerun with: -v\n==24800== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that queue is not bounded", 
        "name": "test_queue_unboundedness", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test semamore in rendezvous.c", 
        "name": "test_semamore", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test semamore init function", 
        "name": "test_semamore_init", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test semamore wait", 
        "name": "test_semamore_wait_simple", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that semamore wait blocks", 
        "name": "test_semamore_wait_block", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test semamore post", 
        "name": "test_semamore_post_simple", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that semamore post blocks", 
        "name": "test_semamore_post_block", 
        "log": "Test Failed"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test on use of barrier.", 
        "name": "test_barrier_single", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test for multiple uses of the barrier.", 
        "name": "test_barrier_multiple", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "name": "test_barrier_mem", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==24932== Memcheck, a memory error detector\n==24932== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==24932== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==24932== Command: ./barrier_tests 2 4\n==24932== \n==24932== \n==24932== HEAP SUMMARY:\n==24932==     in use at exit: 0 bytes in 0 blocks\n==24932==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==24932== \n==24932== All heap blocks were freed -- no leaks are possible\n==24932== \n==24932== For counts of detected and suppressed errors, rerun with: -v\n==24932== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials."
      }
    ], 
    "checksum": "070d7699bee2ffc9148ff626627da1ed769dfdfe  queue.c\n8a483bce32fba801bb574f7d3063adf858985cb9  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c", 
    "revision": "41222"
  }, 
  {
    "timestamp": "2016-10-04 22:00:00.722538", 
    "testcases": [
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_block_on_min", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_maxSize", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, push and pull large amounts of data", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_generic_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_stress", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==11601== Memcheck, a memory error detector\n==11601== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==11601== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==11601== Command: ./queue_tests 5\n==11601== \n==11601== \n==11601== HEAP SUMMARY:\n==11601==     in use at exit: 0 bytes in 0 blocks\n==11601==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==11601== \n==11601== All heap blocks were freed -- no leaks are possible\n==11601== \n==11601== For counts of detected and suppressed errors, rerun with: -v\n==11601== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "test_queue_mem", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that queue is not bounded", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_unboundedness", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore in rendezvous.c", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore init function", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_init", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore wait", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_wait_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore wait blocks", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_wait_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore post", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_post_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore post blocks", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_post_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test on use of barrier.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_barrier_single", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_barrier_multiple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==11733== Memcheck, a memory error detector\n==11733== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==11733== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==11733== Command: ./barrier_tests 2 4\n==11733== \n==11733== \n==11733== HEAP SUMMARY:\n==11733==     in use at exit: 0 bytes in 0 blocks\n==11733==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==11733== \n==11733== All heap blocks were freed -- no leaks are possible\n==11733== \n==11733== For counts of detected and suppressed errors, rerun with: -v\n==11733== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "test_barrier_mem", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "42594", 
    "checksum": "070d7699bee2ffc9148ff626627da1ed769dfdfe  queue.c\n85a4e62ce4642f731839db40e671d2b3d64ed555  semamore.c\n900508539e39728d6e3cafeeb6a5b36afda2f9e6  barrier.c"
  }, 
  {
    "timestamp": "2016-10-05 12:00:00.687175", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_block_on_min", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_maxSize", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_generic_test", 
        "description": "Test queue, push and pull large amounts of data"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_stress", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==30579== Memcheck, a memory error detector\n==30579== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==30579== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==30579== Command: ./queue_tests 5\n==30579== \n==30579== \n==30579== HEAP SUMMARY:\n==30579==     in use at exit: 0 bytes in 0 blocks\n==30579==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==30579== \n==30579== All heap blocks were freed -- no leaks are possible\n==30579== \n==30579== For counts of detected and suppressed errors, rerun with: -v\n==30579== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_mem", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_unboundedness", 
        "description": "Test that queue is not bounded"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore", 
        "description": "Test semamore in rendezvous.c"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_init", 
        "description": "Test semamore init function"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_wait_simple", 
        "description": "Test semamore wait"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_wait_block", 
        "description": "Test that semamore wait blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_post_simple", 
        "description": "Test semamore post"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_post_block", 
        "description": "Test that semamore post blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_barrier_single", 
        "description": "Test on use of barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_barrier_multiple", 
        "description": "Test for multiple uses of the barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==30711== Memcheck, a memory error detector\n==30711== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==30711== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==30711== Command: ./barrier_tests 2 4\n==30711== \n==30711== \n==30711== HEAP SUMMARY:\n==30711==     in use at exit: 0 bytes in 0 blocks\n==30711==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==30711== \n==30711== All heap blocks were freed -- no leaks are possible\n==30711== \n==30711== For counts of detected and suppressed errors, rerun with: -v\n==30711== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_barrier_mem", 
        "description": "Test for multiple uses of the barrier under valgrind."
      }
    ], 
    "checksum": "070d7699bee2ffc9148ff626627da1ed769dfdfe  queue.c\n85a4e62ce4642f731839db40e671d2b3d64ed555  semamore.c\n900508539e39728d6e3cafeeb6a5b36afda2f9e6  barrier.c", 
    "revision": "43065"
  }
]